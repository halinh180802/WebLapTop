#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebLapTop.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ShopLapTop")]
	public partial class MyDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChip(Chip instance);
    partial void UpdateChip(Chip instance);
    partial void DeleteChip(Chip instance);
    partial void InsertCT_DonHang(CT_DonHang instance);
    partial void UpdateCT_DonHang(CT_DonHang instance);
    partial void DeleteCT_DonHang(CT_DonHang instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertHangChip(HangChip instance);
    partial void UpdateHangChip(HangChip instance);
    partial void DeleteHangChip(HangChip instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLapTop(LapTop instance);
    partial void UpdateLapTop(LapTop instance);
    partial void DeleteLapTop(LapTop instance);
    partial void InsertLoaiLapTop(LoaiLapTop instance);
    partial void UpdateLoaiLapTop(LoaiLapTop instance);
    partial void DeleteLoaiLapTop(LoaiLapTop instance);
    #endregion
		
		public MyDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ShopLapTopConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MyDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Chip> Chips
		{
			get
			{
				return this.GetTable<Chip>();
			}
		}
		
		public System.Data.Linq.Table<CT_DonHang> CT_DonHangs
		{
			get
			{
				return this.GetTable<CT_DonHang>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<HangChip> HangChips
		{
			get
			{
				return this.GetTable<HangChip>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LapTop> LapTops
		{
			get
			{
				return this.GetTable<LapTop>();
			}
		}
		
		public System.Data.Linq.Table<LoaiLapTop> LoaiLapTops
		{
			get
			{
				return this.GetTable<LoaiLapTop>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chip")]
	public partial class Chip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChip;
		
		private string _Chip1;
		
		private System.Nullable<int> _MaHang;
		
		private EntitySet<LapTop> _LapTops;
		
		private EntityRef<HangChip> _HangChip;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChipChanging(int value);
    partial void OnMaChipChanged();
    partial void OnChip1Changing(string value);
    partial void OnChip1Changed();
    partial void OnMaHangChanging(System.Nullable<int> value);
    partial void OnMaHangChanged();
    #endregion
		
		public Chip()
		{
			this._LapTops = new EntitySet<LapTop>(new Action<LapTop>(this.attach_LapTops), new Action<LapTop>(this.detach_LapTops));
			this._HangChip = default(EntityRef<HangChip>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChip", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChip
		{
			get
			{
				return this._MaChip;
			}
			set
			{
				if ((this._MaChip != value))
				{
					this.OnMaChipChanging(value);
					this.SendPropertyChanging();
					this._MaChip = value;
					this.SendPropertyChanged("MaChip");
					this.OnMaChipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Chip", Storage="_Chip1", DbType="NChar(10)")]
		public string Chip1
		{
			get
			{
				return this._Chip1;
			}
			set
			{
				if ((this._Chip1 != value))
				{
					this.OnChip1Changing(value);
					this.SendPropertyChanging();
					this._Chip1 = value;
					this.SendPropertyChanged("Chip1");
					this.OnChip1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", DbType="Int")]
		public System.Nullable<int> MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					if (this._HangChip.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Chip_LapTop", Storage="_LapTops", ThisKey="MaChip", OtherKey="MaChip")]
		public EntitySet<LapTop> LapTops
		{
			get
			{
				return this._LapTops;
			}
			set
			{
				this._LapTops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangChip_Chip", Storage="_HangChip", ThisKey="MaHang", OtherKey="MaHang", IsForeignKey=true)]
		public HangChip HangChip
		{
			get
			{
				return this._HangChip.Entity;
			}
			set
			{
				HangChip previousValue = this._HangChip.Entity;
				if (((previousValue != value) 
							|| (this._HangChip.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangChip.Entity = null;
						previousValue.Chips.Remove(this);
					}
					this._HangChip.Entity = value;
					if ((value != null))
					{
						value.Chips.Add(this);
						this._MaHang = value.MaHang;
					}
					else
					{
						this._MaHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("HangChip");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LapTops(LapTop entity)
		{
			this.SendPropertyChanging();
			entity.Chip = this;
		}
		
		private void detach_LapTops(LapTop entity)
		{
			this.SendPropertyChanging();
			entity.Chip = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CT_DonHang")]
	public partial class CT_DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private int _MaLapTop;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _Gia;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<LapTop> _LapTop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnMaLapTopChanging(int value);
    partial void OnMaLapTopChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnGiaChanging(System.Nullable<decimal> value);
    partial void OnGiaChanged();
    #endregion
		
		public CT_DonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._LapTop = default(EntityRef<LapTop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLapTop", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaLapTop
		{
			get
			{
				return this._MaLapTop;
			}
			set
			{
				if ((this._MaLapTop != value))
				{
					if (this._LapTop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLapTopChanging(value);
					this.SendPropertyChanging();
					this._MaLapTop = value;
					this.SendPropertyChanged("MaLapTop");
					this.OnMaLapTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_CT_DonHang", Storage="_DonHang", ThisKey="MaDH", OtherKey="MaDH", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.CT_DonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.CT_DonHangs.Add(this);
						this._MaDH = value.MaDH;
					}
					else
					{
						this._MaDH = default(int);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LapTop_CT_DonHang", Storage="_LapTop", ThisKey="MaLapTop", OtherKey="MaLapTop", IsForeignKey=true)]
		public LapTop LapTop
		{
			get
			{
				return this._LapTop.Entity;
			}
			set
			{
				LapTop previousValue = this._LapTop.Entity;
				if (((previousValue != value) 
							|| (this._LapTop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LapTop.Entity = null;
						previousValue.CT_DonHangs.Remove(this);
					}
					this._LapTop.Entity = value;
					if ((value != null))
					{
						value.CT_DonHangs.Add(this);
						this._MaLapTop = value.MaLapTop;
					}
					else
					{
						this._MaLapTop = default(int);
					}
					this.SendPropertyChanged("LapTop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDH;
		
		private bool _ThanhToan;
		
		private bool _GiaoHang;
		
		private System.DateTime _NgayDat;
		
		private System.DateTime _NgayGiao;
		
		private int _MaKH;
		
		private EntitySet<CT_DonHang> _CT_DonHangs;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDHChanging(int value);
    partial void OnMaDHChanged();
    partial void OnThanhToanChanging(bool value);
    partial void OnThanhToanChanged();
    partial void OnGiaoHangChanging(bool value);
    partial void OnGiaoHangChanged();
    partial void OnNgayDatChanging(System.DateTime value);
    partial void OnNgayDatChanged();
    partial void OnNgayGiaoChanging(System.DateTime value);
    partial void OnNgayGiaoChanged();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    #endregion
		
		public DonHang()
		{
			this._CT_DonHangs = new EntitySet<CT_DonHang>(new Action<CT_DonHang>(this.attach_CT_DonHangs), new Action<CT_DonHang>(this.detach_CT_DonHangs));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDH
		{
			get
			{
				return this._MaDH;
			}
			set
			{
				if ((this._MaDH != value))
				{
					this.OnMaDHChanging(value);
					this.SendPropertyChanging();
					this._MaDH = value;
					this.SendPropertyChanged("MaDH");
					this.OnMaDHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhToan", DbType="Bit NOT NULL")]
		public bool ThanhToan
		{
			get
			{
				return this._ThanhToan;
			}
			set
			{
				if ((this._ThanhToan != value))
				{
					this.OnThanhToanChanging(value);
					this.SendPropertyChanging();
					this._ThanhToan = value;
					this.SendPropertyChanged("ThanhToan");
					this.OnThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaoHang", DbType="Bit NOT NULL")]
		public bool GiaoHang
		{
			get
			{
				return this._GiaoHang;
			}
			set
			{
				if ((this._GiaoHang != value))
				{
					this.OnGiaoHangChanging(value);
					this.SendPropertyChanging();
					this._GiaoHang = value;
					this.SendPropertyChanged("GiaoHang");
					this.OnGiaoHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayDat", DbType="Date NOT NULL")]
		public System.DateTime NgayDat
		{
			get
			{
				return this._NgayDat;
			}
			set
			{
				if ((this._NgayDat != value))
				{
					this.OnNgayDatChanging(value);
					this.SendPropertyChanging();
					this._NgayDat = value;
					this.SendPropertyChanged("NgayDat");
					this.OnNgayDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="Date NOT NULL")]
		public System.DateTime NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL")]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_CT_DonHang", Storage="_CT_DonHangs", ThisKey="MaDH", OtherKey="MaDH")]
		public EntitySet<CT_DonHang> CT_DonHangs
		{
			get
			{
				return this._CT_DonHangs;
			}
			set
			{
				this._CT_DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.DonHangs.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.DonHangs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangChip")]
	public partial class HangChip : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHang;
		
		private string _TenHang;
		
		private EntitySet<Chip> _Chips;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHangChanging(int value);
    partial void OnMaHangChanged();
    partial void OnTenHangChanging(string value);
    partial void OnTenHangChanged();
    #endregion
		
		public HangChip()
		{
			this._Chips = new EntitySet<Chip>(new Action<Chip>(this.attach_Chips), new Action<Chip>(this.detach_Chips));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHang
		{
			get
			{
				return this._MaHang;
			}
			set
			{
				if ((this._MaHang != value))
				{
					this.OnMaHangChanging(value);
					this.SendPropertyChanging();
					this._MaHang = value;
					this.SendPropertyChanged("MaHang");
					this.OnMaHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHang", DbType="VarChar(50)")]
		public string TenHang
		{
			get
			{
				return this._TenHang;
			}
			set
			{
				if ((this._TenHang != value))
				{
					this.OnTenHangChanging(value);
					this.SendPropertyChanging();
					this._TenHang = value;
					this.SendPropertyChanged("TenHang");
					this.OnTenHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangChip_Chip", Storage="_Chips", ThisKey="MaHang", OtherKey="MaHang")]
		public EntitySet<Chip> Chips
		{
			get
			{
				return this._Chips;
			}
			set
			{
				this._Chips.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chips(Chip entity)
		{
			this.SendPropertyChanging();
			entity.HangChip = this;
		}
		
		private void detach_Chips(Chip entity)
		{
			this.SendPropertyChanging();
			entity.HangChip = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _HoTen;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _Email;
		
		private System.DateTime _NgaySinh;
		
		private string _DienThoai;
		
		private string _DiaChi;
		
		private EntitySet<DonHang> _DonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNgaySinhChanging(System.DateTime value);
    partial void OnNgaySinhChanged();
    partial void OnDienThoaiChanging(string value);
    partial void OnDienThoaiChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    #endregion
		
		public KhachHang()
		{
			this._DonHangs = new EntitySet<DonHang>(new Action<DonHang>(this.attach_DonHangs), new Action<DonHang>(this.detach_DonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="Date NOT NULL")]
		public System.DateTime NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienThoai", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string DienThoai
		{
			get
			{
				return this._DienThoai;
			}
			set
			{
				if ((this._DienThoai != value))
				{
					this.OnDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._DienThoai = value;
					this.SendPropertyChanged("DienThoai");
					this.OnDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_DonHang", Storage="_DonHangs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<DonHang> DonHangs
		{
			get
			{
				return this._DonHangs;
			}
			set
			{
				this._DonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_DonHangs(DonHang entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LapTop")]
	public partial class LapTop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLapTop;
		
		private System.Nullable<int> _MaLoaiLT;
		
		private string _TenLapTop;
		
		private string _Hinh;
		
		private System.Nullable<decimal> _GiaBan;
		
		private System.Nullable<System.DateTime> _NgayCapNhap;
		
		private System.Nullable<int> _SoLuongTon;
		
		private System.Nullable<int> _MaChip;
		
		private EntitySet<CT_DonHang> _CT_DonHangs;
		
		private EntityRef<Chip> _Chip;
		
		private EntityRef<LoaiLapTop> _LoaiLapTop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLapTopChanging(int value);
    partial void OnMaLapTopChanged();
    partial void OnMaLoaiLTChanging(System.Nullable<int> value);
    partial void OnMaLoaiLTChanged();
    partial void OnTenLapTopChanging(string value);
    partial void OnTenLapTopChanged();
    partial void OnHinhChanging(string value);
    partial void OnHinhChanged();
    partial void OnGiaBanChanging(System.Nullable<decimal> value);
    partial void OnGiaBanChanged();
    partial void OnNgayCapNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayCapNhapChanged();
    partial void OnSoLuongTonChanging(System.Nullable<int> value);
    partial void OnSoLuongTonChanged();
    partial void OnMaChipChanging(System.Nullable<int> value);
    partial void OnMaChipChanged();
    #endregion
		
		public LapTop()
		{
			this._CT_DonHangs = new EntitySet<CT_DonHang>(new Action<CT_DonHang>(this.attach_CT_DonHangs), new Action<CT_DonHang>(this.detach_CT_DonHangs));
			this._Chip = default(EntityRef<Chip>);
			this._LoaiLapTop = default(EntityRef<LoaiLapTop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLapTop", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLapTop
		{
			get
			{
				return this._MaLapTop;
			}
			set
			{
				if ((this._MaLapTop != value))
				{
					this.OnMaLapTopChanging(value);
					this.SendPropertyChanging();
					this._MaLapTop = value;
					this.SendPropertyChanged("MaLapTop");
					this.OnMaLapTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiLT", DbType="Int")]
		public System.Nullable<int> MaLoaiLT
		{
			get
			{
				return this._MaLoaiLT;
			}
			set
			{
				if ((this._MaLoaiLT != value))
				{
					if (this._LoaiLapTop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiLTChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiLT = value;
					this.SendPropertyChanged("MaLoaiLT");
					this.OnMaLoaiLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLapTop", DbType="NVarChar(50)")]
		public string TenLapTop
		{
			get
			{
				return this._TenLapTop;
			}
			set
			{
				if ((this._TenLapTop != value))
				{
					this.OnTenLapTopChanging(value);
					this.SendPropertyChanging();
					this._TenLapTop = value;
					this.SendPropertyChanged("TenLapTop");
					this.OnTenLapTopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hinh", DbType="VarChar(50)")]
		public string Hinh
		{
			get
			{
				return this._Hinh;
			}
			set
			{
				if ((this._Hinh != value))
				{
					this.OnHinhChanging(value);
					this.SendPropertyChanging();
					this._Hinh = value;
					this.SendPropertyChanged("Hinh");
					this.OnHinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaBan", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GiaBan
		{
			get
			{
				return this._GiaBan;
			}
			set
			{
				if ((this._GiaBan != value))
				{
					this.OnGiaBanChanging(value);
					this.SendPropertyChanging();
					this._GiaBan = value;
					this.SendPropertyChanged("GiaBan");
					this.OnGiaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayCapNhap", DbType="Date")]
		public System.Nullable<System.DateTime> NgayCapNhap
		{
			get
			{
				return this._NgayCapNhap;
			}
			set
			{
				if ((this._NgayCapNhap != value))
				{
					this.OnNgayCapNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayCapNhap = value;
					this.SendPropertyChanged("NgayCapNhap");
					this.OnNgayCapNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int")]
		public System.Nullable<int> SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChip", DbType="Int")]
		public System.Nullable<int> MaChip
		{
			get
			{
				return this._MaChip;
			}
			set
			{
				if ((this._MaChip != value))
				{
					if (this._Chip.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaChipChanging(value);
					this.SendPropertyChanging();
					this._MaChip = value;
					this.SendPropertyChanged("MaChip");
					this.OnMaChipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LapTop_CT_DonHang", Storage="_CT_DonHangs", ThisKey="MaLapTop", OtherKey="MaLapTop")]
		public EntitySet<CT_DonHang> CT_DonHangs
		{
			get
			{
				return this._CT_DonHangs;
			}
			set
			{
				this._CT_DonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Chip_LapTop", Storage="_Chip", ThisKey="MaChip", OtherKey="MaChip", IsForeignKey=true)]
		public Chip Chip
		{
			get
			{
				return this._Chip.Entity;
			}
			set
			{
				Chip previousValue = this._Chip.Entity;
				if (((previousValue != value) 
							|| (this._Chip.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chip.Entity = null;
						previousValue.LapTops.Remove(this);
					}
					this._Chip.Entity = value;
					if ((value != null))
					{
						value.LapTops.Add(this);
						this._MaChip = value.MaChip;
					}
					else
					{
						this._MaChip = default(Nullable<int>);
					}
					this.SendPropertyChanged("Chip");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiLapTop_LapTop", Storage="_LoaiLapTop", ThisKey="MaLoaiLT", OtherKey="MaLoaiLT", IsForeignKey=true)]
		public LoaiLapTop LoaiLapTop
		{
			get
			{
				return this._LoaiLapTop.Entity;
			}
			set
			{
				LoaiLapTop previousValue = this._LoaiLapTop.Entity;
				if (((previousValue != value) 
							|| (this._LoaiLapTop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiLapTop.Entity = null;
						previousValue.LapTops.Remove(this);
					}
					this._LoaiLapTop.Entity = value;
					if ((value != null))
					{
						value.LapTops.Add(this);
						this._MaLoaiLT = value.MaLoaiLT;
					}
					else
					{
						this._MaLoaiLT = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiLapTop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.LapTop = this;
		}
		
		private void detach_CT_DonHangs(CT_DonHang entity)
		{
			this.SendPropertyChanging();
			entity.LapTop = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiLapTop")]
	public partial class LoaiLapTop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoaiLT;
		
		private string _TenLoai;
		
		private EntitySet<LapTop> _LapTops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiLTChanging(int value);
    partial void OnMaLoaiLTChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiLapTop()
		{
			this._LapTops = new EntitySet<LapTop>(new Action<LapTop>(this.attach_LapTops), new Action<LapTop>(this.detach_LapTops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiLT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoaiLT
		{
			get
			{
				return this._MaLoaiLT;
			}
			set
			{
				if ((this._MaLoaiLT != value))
				{
					this.OnMaLoaiLTChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiLT = value;
					this.SendPropertyChanged("MaLoaiLT");
					this.OnMaLoaiLTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(200)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiLapTop_LapTop", Storage="_LapTops", ThisKey="MaLoaiLT", OtherKey="MaLoaiLT")]
		public EntitySet<LapTop> LapTops
		{
			get
			{
				return this._LapTops;
			}
			set
			{
				this._LapTops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LapTops(LapTop entity)
		{
			this.SendPropertyChanging();
			entity.LoaiLapTop = this;
		}
		
		private void detach_LapTops(LapTop entity)
		{
			this.SendPropertyChanging();
			entity.LoaiLapTop = null;
		}
	}
}
#pragma warning restore 1591
